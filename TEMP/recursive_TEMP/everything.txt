# import pygame, os, sys
# from general_functions import load_image
#     #
#     #
#     # class Tower(pygame.sprite.Sprite):
#     #     def __init__(self, pos, type):
#     #         super().__init__(all_sprites)
#     #
# 
# pygame.init()
# size = width, height = 500, 450
# screen = pygame.display.set_mode(size)
# 
# 
# 
# def load_level(filename):
#     with open(filename, 'r') as mapFile:
#         level_map = [line.strip() for line in mapFile]
#     max_width = max(map(len, level_map))
#     return level_map
# 
# class Tile(pygame.sprite.Sprite):
#     def __init__(self, tile_type, pos_x, pos_y):
#         super().__init__(tiles_group, all_sprites)
#         self.image = tile_images[tile_type]
#         self.rect = self.image.get_rect().move(
#             tile_width * pos_x, tile_height * pos_y)
# 
# class Map(pygame.sprite.Sprite):
#     def __init__(self, width, height, tile_size):
#         self.width = width
#         self.height = height
#         self.board = [[0] * width for _ in range(height)]
# 
#         self.left = 10
#         self.top = 10
#         self.cell_size = 10
# 
#     def set_view(self, left, top, cell_size):
#         self.left = left
#         self.top = top
#         self.cell_size = cell_size
# 
#     def render(self, level):
#         new_player, x, y = None, None, None
#         for y in range(len(level)):
#             for x in range(len(level[y])):
#                 if level[y][x] == '1':
#                     Tile('grass', x, y)
#                 elif level[y][x] == '2':
#                     Tile('road', x, y)
#         return None
# 
#     def get_cell(self, mouse_pos):
#         x = mouse_pos[0]
#         y = mouse_pos[1]
#         if x > self.left and x < (self.left + (self.cell_size * self.width)) and \
#                 y > self.top and y < (self.top + (self.cell_size * self.height)):
#             return ((x - self.left) // self.cell_size, (y - self.top) // self.cell_size)
#         else:
#             return None
# 
#     def on_click(self, cell_coords):
#         print(cell_coords)
#         self.board[cell_coords[1]][cell_coords[0]] = not self.board[cell_coords[1]][cell_coords[0]]
# 
#     def get_click(self, mouse_pos):
#         cell = self.get_cell(mouse_pos)
#         if cell == None:
#             print("Вне границ поля")
#         else:
#             self.on_click(cell)
# 
# 
# tile_images = {'road': load_image('Textures/stone.png'),
#                'grass': load_image('Textures/grass.png')}
# tile_width = tile_height = 50
# all_sprites = pygame.sprite.Group()
# tiles_group = pygame.sprite.Group()
# 
# # main cycle
# if __name__ == '__main__':
#     running = True
#     all_sprites.draw(screen)
#     level = Map(10, 10, 10)
#     while running:
#         for event in pygame.event.get():
#             if event.type == pygame.QUIT:
#                 running = False
#         pygame.display.flip()
#     pygame.quit()
